using Photon.Pun;
using UnityEngine;
using TMPro;

public class Door : MonoBehaviourPunCallbacks, IInteractable
{
    private Animator animator;
    private bool isOpen = false;
    private bool openDoor = false;
    private Player_Equip playerEquip; // Player_Equip ?????? ????
    private PhotonItem _PhotonItem; // Player_Equip ?????? ????

    [SerializeField] private AudioSource audioSource; // AudioSource ???????
    [SerializeField] private AudioClip lockedSound; // ?????? ??? ???
    [SerializeField] private AudioClip openSound; // ?????? ??? ???

    void Start()
    {
        animator = GetComponent<Animator>();
        playerEquip = FindObjectOfType<Player_Equip>(); // Player_Equip ????????? ???? ??????? ???

        if (audioSource == null)
        {
            audioSource = gameObject.AddComponent<AudioSource>(); // AudioSource ????????? ?????? ???
        }
    }

    public void OnInteract()
    {
        if (openDoor == true)
        {
            photonView.RPC("RPC_OpenDoor", RpcTarget.All , PhotonNetwork.LocalPlayer.ActorNumber); // ?? ???? ?????
            Debug.Log("???? ???????.");
            openDoor = false;
            return;
        }

        // ???? ???????? ???, Player_Equip???? ???? ?????? ???????? ???
        if (!isOpen && playerEquip != null && playerEquip.HasEquippedKey())
        {
            isOpen = true;
            Debug.Log("???? ????? ??????????.");
            openDoor = true;

            playerEquip.photonView.RPC("RemoveEquippedItem", RpcTarget.All, "Key");


            // ?? ??? ???? ???��? ??? ????????? ?????
            photonView.RPC("RPC_UnlockDoor", RpcTarget.All);

            isOpen = true;
            Debug.Log("???? ????? ??????????.");
            openDoor = true;
            
            _PhotonItem.RemoveEquippedItem(GetComponent<ItemObject>().item.ItemName);
            Inventory.instance.RemoveItem(GetComponent<ItemObject>().item.ItemName);
            Destroy(GetComponentInParent<Player_Equip>().Item);
            
            GameObject.Find("ItemName_Text").gameObject.GetComponent<TextMeshProUGUI>().text = "";
            Debug.Log(GameObject.Find("ItemName_Text").gameObject.GetComponent<TextMeshProUGUI>().gameObject.name);

            // ?? ??? ???? ???��? ??? ????????? ?????
            photonView.RPC("RPC_UnlockDoor", RpcTarget.All);

            return;
        }
        else if (!isOpen)
        {
            Debug.Log("??? ??????. ???? ???????.");
            if (audioSource != null && lockedSound != null)
            {
                audioSource.PlayOneShot(lockedSound); // ?????? ??? ???
            }
        }

        if (isOpen && openDoor == false)
        {
            photonView.RPC("RPC_CloseDoor", RpcTarget.All); // ?? ??? ?????
            Debug.Log("???? ???????.");
            openDoor = true;
            return;
        }
    }

    public string GetInteractPrompt()
    {
        if (isOpen == false)
        {
            return "?? ???????";
        }
        else if (openDoor == false)
        {
            return "?? ???";
        }
        else if (openDoor == true)
        {
            return "?? ????";
        }
        return "???"; // ?? ????? ???
    }

    [PunRPC]
    void RPC_OpenDoor(int ActorNumber)
    {
        if (animator != null)
        {
            animator.SetBool("Open", true); // ?? ???? ??????? ????
        }
        else
        {
            transform.position += -transform.forward * 1.5f; // ???? ?????????? ?? ???
        }

        // ?????? ??? ???
        if (audioSource != null && openSound != null)
        {
            audioSource.PlayOneShot(openSound);
        }
    }

    [PunRPC]
    void RPC_CloseDoor()
    {
        if (animator != null)
        {
            animator.SetBool("Open", false); // ?? ??? ??????? ????
        }
        else
        {
            transform.position -= -transform.forward * 1.5f; // ???? ???????? ?? ???
        }
    }

    [PunRPC]
    void RPC_UnlockDoor()
    {
        isOpen = true;
    }
}